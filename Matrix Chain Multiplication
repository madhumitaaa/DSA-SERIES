https://takeuforward.org/plus/dsa/problems/matrix-chain-multiplication

class Solution{
	public:


int solve(int i,int j,vector<int>& nums, vector<vector<int>>& dp){

    if(i==j)return 0;
    if(dp[i][j]!=-1)return dp[i][j];
    int mini=INT_MAX;
    for(int k=i;k<j;k++){
       int cost= solve(i,k,nums,dp)+solve(k+1,j,nums,dp)+nums[i-1]*nums[k]*nums[j];
        mini=min(mini,cost);
    }
    return dp[i][j]=mini;
}


		int matrixMultiplication(vector<int>& nums){
            //your code goes here
            int n=nums.size();
            vector<vector<int>>dp(n,vector<int>(n,-1));
            return solve(1,n-1,nums,dp);

    	}
};
