https://leetcode.com/problems/maximum-height-by-stacking-cuboids/submissions/1731807454/

class Solution {
public:

int solve(vector<vector<int>>& cuboids,int n, int curr, int prev, vector<vector<int>>&dp )
{
    if(curr==n)return 0;
    if(dp[curr][prev+1]!=-1)return dp[curr][prev+1];
    int not_take=solve(cuboids,n,curr+1,prev,dp);
    int take=0;
    if(prev==-1||(cuboids[prev][0]<=cuboids[curr][0])&& (cuboids[prev][1]<=cuboids[curr][1])&& (cuboids[prev][2]<=cuboids[curr][2])){
        take=cuboids[curr][2]+solve(cuboids,n,curr+1,curr,dp);
    }

    return dp[curr][prev+1]=max(take,not_take);
}



    int maxHeight(vector<vector<int>>& cuboids) {

        int n=cuboids.size();
        for(auto &c:cuboids)sort(c.begin(),c.end());
        sort(cuboids.begin(),cuboids.end());
        vector<vector<int>>dp(n,vector<int>(n+1,-1));
        int curr=0,prev=-1;
        return solve(cuboids,n,0,-1,dp);
        
    }
};
