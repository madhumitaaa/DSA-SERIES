https://leetcode.com/problems/subarray-sums-divisible-by-k/submissions/1780482051/

class Solution {
public:
     int subarraysDivByK(vector<int>& nums, int k) {
        int n=nums.size();
        unordered_map<int,int>mpp;
        mpp[0]=1;
        int prefix=0,count=0;
        for(int i=0;i<n;i++)
        {
                prefix+=nums[i];
                int rem=(prefix%k);
                if(rem<0)rem+=k;
                if(mpp.find(rem)!=mpp.end())
                {
                    count+=mpp[rem];
                }
                mpp[rem]++;
        }
        return count;
     }
    
};
