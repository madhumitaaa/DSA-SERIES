https://www.geeksforgeeks.org/problems/top-view-of-binary-tree/1

/*
struct Node
{
    int data;
    Node* left;
    Node* right;
};
*/
class Solution {
  public:
    // Function to return a list of nodes visible from the top view
    // from left to right in Binary Tree.
    vector<int> topView(Node *root) {
        // code here
        map<int,int>mpp;
        vector<int>result;
        queue<pair<Node*,int>>q;
        q.push({root,0});
        while(!q.empty()){
            auto it=q.front();
            q.pop();
            Node *node=it.first;
            int hd=it.second;
            if(mpp.find(hd)==mpp.end()) mpp[hd]=node->data;
            if(node->left)q.push({node->left,hd-1});
             if(node->right)q.push({node->right,hd+1});
        }
        for(auto &it:mpp)
        {
            result.push_back(it.second);
        }
        return result;
    }
};
