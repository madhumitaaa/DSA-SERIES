https://leetcode.com/problems/partition-equal-subset-sum/submissions/1732267731/

#include<bits/stdc++.h>
class Solution {
public:

   bool canPartition(vector<int>& nums) {
        int sum=accumulate(nums.begin(),nums.end(),0);
        if(sum%2!=0)return false;
        int target=sum/2;
        int n=nums.size();
        vector<vector<bool>>dp(n+1,vector<bool>(target+1,false));
        dp[0][0]=true;
        for(int i=1;i<=n;i++)
        {
            for(int t=0;t<=target;t++)
            {
                dp[i][t]=dp[i-1][t];
                    if(t>=nums[i-1])
                    {
                        dp[i][t]=dp[i][t]||dp[i-1][t-nums[i-1]];
                    }


            }
        }
return dp[n][target];

        
    }
};
