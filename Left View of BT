https://takeuforward.org/plus/dsa/problems/right-left-view-of-bt

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int data;
 *     TreeNode *left;
 *     TreeNode *right;
 *      TreeNode(int val) : data(val) , left(nullptr) , right(nullptr) {}
 * };
 **/

class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        //your code goes here
        vector<int>result;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty()){
            int size=q.size();
            for(int i=0;i<size;i++)
            {
                TreeNode *Node=q.front();
                q.pop();
                if(i==size-1)result.push_back(Node->data);
                if(Node->left)q.push(Node->left);
                if(Node->right)q.push(Node->right);
                
            }
        }
        return result;
    }
};
