https://leetcode.com/problems/permutations/submissions/1764414694/

class Solution {
public:


void backtrack(vector<int>& nums,vector<int>&used,vector<int>curr,vector<vector<int>>&ans)
{
    if(curr.size()==nums.size()){
        ans.push_back(curr);
        return;
    }
    for(int j=0;j<nums.size();j++)
    {
        if(used[j])continue;
      used[j]=true;
      curr.push_back(nums[j]);
      backtrack(nums,used,curr,ans);
      curr.pop_back();
      used[j]=false;
    }
}


    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>>ans;
        vector<int>curr;
        vector<int>used(nums.size(),false);
        backtrack(nums,used,curr,ans);
        return ans;
        
    }
};
