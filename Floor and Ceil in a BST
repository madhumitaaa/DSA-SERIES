https://takeuforward.org/plus/dsa/problems/floor-and-ceil-in-a-bst

/**
 * Definition for a binary tree node.
 * class TreeNode {
 *     int data;
 *     TreeNode *left;
 *     TreeNode *right;
 *      TreeNode(int val) : data(val) , left(nullptr) , right(nullptr) {}
 * };
 **/

class Solution{	
	public:
		vector<int> floorCeilOfBST(TreeNode* root,int key){
			//your code goes here
            int floor=-1,ceil=-1;
            solve(root,key,floor,ceil);
            return{floor,ceil};
		}

        private:
        void solve(TreeNode* root,int key,int &floor,int &ceil)
        {
            if(!root)return;
            if(root->data==key){
                floor=root->data;
                ceil=root->data;

            }
            else if(root->data<key){
                floor=root->data;
                solve(root->right,key,floor,ceil);
            }
             else{
                ceil=root->data;
                solve(root->left,key,floor,ceil);
             }
        }
};
