https://leetcode.com/problems/shortest-palindrome/description/

class Solution {
public:

vector<int> comparelps(string s){
    int n=s.length();
    vector<int>lps(n,0);
    int len=0;int i=1;
    while(i<n)
    {
        if(s[i]==s[len])
        {
            len++;
            lps[i]=len;
            i++;
        }
         else{
            if(len!=0)
            {
                len=lps[len-1];
            }
            else{
                lps[i]=0;
                i++;
            }
         }
    }
return lps;
}


    string shortestPalindrome(string s) {
        string rev=s;
        reverse (rev.begin(),rev.end());
        string temp=s+'#'+rev;
        vector<int>lps=comparelps(temp);
        int toaddlen=s.length()-lps.back();
        return rev.substr(0,toaddlen)+s;
        
    }
};
