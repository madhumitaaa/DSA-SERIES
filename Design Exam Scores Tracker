https://leetcode.com/contest/biweekly-contest-167/problems/design-exam-scores-tracker/

class ExamTracker {
public:
    vector<pair<int,int>>rec;
     vector<long long>prefixsum;
    ExamTracker() {
        
    }
    
    void record(int time, int score) {
        
        rec.push_back({time,score});
        if(prefixsum.empty())prefixsum.push_back(score);
        
            else prefixsum.push_back(prefixsum.back()+score);
                
            
    }
    
    long long totalScore(int startTime, int endTime) {
      
        long long maxo=0;
        int n=rec.size();
     int left=0,right=n-1,l=n;
        while(left<=right)
            {
                int mid=left+(right-left)/2;
                if(rec[mid].first>=startTime){
                    l=mid;
                    right=mid-1;
                }
                 else left=mid+1;
                
            }

        left=0;
        right=n-1;
        int r=-1;
          while(left<=right)
            {
                int mid=left+(right-left)/2;
                if(rec[mid].first<=endTime){
                    r=mid;
                    left=mid+1;
                }
                 else right=mid-1;
                
            }

      if(l>r||l==n||r==-1)return 0;
        return prefixsum[r]-(l>0 ? prefixsum[l-1]:0);
    }
};

/**
 * Your ExamTracker object will be instantiated and called as such:
 * ExamTracker* obj = new ExamTracker();
 * obj->record(time,score);
 * long long param_2 = obj->totalScore(startTime,endTime);
 */Â©leetcode
