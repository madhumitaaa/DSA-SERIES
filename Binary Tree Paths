https://leetcode.com/problems/binary-tree-paths/submissions/1751911053/?envType=problem-list-v2&envId=binary-tree

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

void dfs(TreeNode* root,string path, vector<string>&result)
{
    if(root==NULL)return ;
    if(path.empty())path=to_string(root->val);
     else path+="->"+to_string(root->val);
     if(!root->left&&!root->right)
     {
        result.push_back(path);
        return;
     }

     dfs(root->left,path,result);
     dfs(root->right,path,result);
}





    vector<string> binaryTreePaths(TreeNode* root) {
   vector<string>result;
   dfs(root,"",result);
   return result;
    }
};
