https://leetcode.com/problems/binary-tree-maximum-path-sum/submissions/1768199931/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:


int findsum(TreeNode* root,int &maxi){
    if(!root)return 0;
    int left=max(0,findsum(root->left,maxi));
    int right=max(0,findsum(root->right,maxi));
    maxi=max(maxi,left+right+root->val);
    return root->val+max(left,right);
    
}

    int maxPathSum(TreeNode* root) {
     int maxi=INT_MIN;
     findsum(root,maxi);
     return maxi;

    }
};
