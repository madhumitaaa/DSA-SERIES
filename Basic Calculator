https://leetcode.com/problems/basic-calculator/description/

class Solution {
public:
    int calculate(string s) {
        int n = s.size();
        stack<pair<int, int>> st;
        int result = 0, sign = 1, num = 0;
        for (int i = 0; i < n; i++) {
            char c = s[i];
            if (isdigit(c)) {
                num = num * 10 + (c - '0');
            } 
            else if (c == '+' || c == '-') {
                result += sign * num;
                sign = (c == '+') ? 1 : -1;
                num = 0;
            }
            else if (c == '(') {
                st.push({result, sign});
                result=0;
                sign = 1;
                num = 0;
            }
          else  if (c == ')') {
                result += sign * num;
                auto [prevstate, prevsign] = st.top();
                st.pop();
                result = prevstate + prevsign * result;
                num = 0;
            }
           
        }
         result += sign * num;
        return result;
    }
};
